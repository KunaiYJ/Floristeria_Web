{"version":3,"sources":["app.js","products.js","buscador.js","fullcalendar.js","ventas.js"],"names":["eventListener","mobileMenu","document","querySelector","addEventListener","navegacionResponsive","metodoContacto","querySelectorAll","length","forEach","input","mostrarMetodosContacto","e","contactoDiv","target","value","innerHTML","abrirModal","idProducto","cantidadFlores","stock","getElementById","style","display","cerrarModal","inputBusqueda","filas","filtro","toLowerCase","fila","textContent","includes","calendar1","calendarEl1","modal","closeBtn","FullCalendar","Calendar","initialView","locale","events","eventClick","info","innerText","event","extendedProps","cliente","title","start","toISOString","split","direccion","contacto","id","estado","tipo","eventClassNames","arg","render","searchTerm","this","getEvents","setProp","onclick","window","preventDefault","formData","FormData","fetch","action","method","body","then","response","json","data","success","refetchEvents","alert","catch","error","console","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","createElement","classList","add","ondblclick","eliminarTag","appendChild","actualizarInputHidden","remove","filter","join","key","trim","push","productosContainer","productosSeleccionadosContainer","totalDisplay","buscador","totalVenta","productosEnVenta","productos","Array","from","children","map","producto","getAttribute","precio","parseFloat","categoria","elemento","formatoMoneda","valor","toFixed","actualizarTotal","Object","values","reduce","total","cantidad","actualizarListaProductos","entries","subtotal","productoRow","spanNombre","nombre","spanCantidad","spanPrecio","spanSubtotal","botonEliminar","setAttribute","boton","productoId","eliminarProductoSeleccionado","textoBusqueda","productosFiltrados","mostrarProductosFiltrados","alt","card","closest","nombreProducto","precioProducto","keys","clienteId","Swal","fire","icon","text","confirmButtonText","customClass","popup","ventaData","clienteID","headers","Content-Type","JSON","stringify","mensaje","message","button","categoriaId","mostrarProductosPorCategoria"],"mappings":"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","file":"bundle.js","sourcesContent":["document.addEventListener('DOMContentLoaded', function() {\r\n    eventListener();\r\n});\r\n\r\nfunction eventListener() {\r\n    const mobileMenu = document.querySelector('.mobile-menu');\r\n    if (mobileMenu) {\r\n        mobileMenu.addEventListener('click', navegacionResponsive);\r\n    }\r\n\r\n    const metodoContacto = document.querySelectorAll('input[name=\"contacto[contacto]\"]');\r\n    if (metodoContacto.length > 0) {\r\n        metodoContacto.forEach(input => input.addEventListener('click', mostrarMetodosContacto));\r\n    }\r\n}\r\n\r\nfunction mostrarMetodosContacto(e) {\r\n    const contactoDiv = document.querySelector('#contacto');\r\n    \r\n    if(e.target.value == 'telefono') {\r\n        contactoDiv.innerHTML = `\r\n            <label for=\"telefono\">Número de teléfono: </label>\r\n            <input type=\"tel\" placeholder=\"Tu número telefónico\" id=\"telefono\" name=\"contacto[telefono]\" required>\r\n\r\n            <p>Elija la fecha y la hora para la llamada</p>\r\n\r\n            <label for=\"fecha\">Fecha: </label>\r\n            <input type=\"date\" id=\"fecha\" name=\"contacto[fecha]\" required>\r\n\r\n            <label for=\"hora\">Hora: </label>\r\n            <input type=\"time\" id=\"hora\" min=\"09:00\" max=\"18:00\" name=\"contacto[hora]\" required>\r\n        `;\r\n    } else {\r\n        contactoDiv.innerHTML =  `\r\n            <label for=\"email\">Correo electrónico: </label>\r\n            <input type=\"email\" placeholder=\"Tu correo electrónico\" id=\"email\" name=\"contacto[email]\" required>\r\n        `;\r\n    }\r\n}\r\n","(function() {\r\n    const tagsInput = document.querySelector('#tags_input');\r\n\r\n    if (tagsInput) {\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n        let tags = [];\r\n\r\n        if(tagsInputHidden.value !== '') {\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n        \r\n        tagsInput.addEventListener('keypress', guardarTag);\r\n\r\n        function guardarTag(e) {\r\n            if (e.key === ',') {\r\n                if (e.target.value.trim() === '' || tags.includes(e.target.value.trim())) {\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                e.preventDefault();\r\n                tags.push(e.target.value.trim());\r\n                tagsInput.value = '';\r\n\r\n                mostrarTags();\r\n            }\r\n        }\r\n\r\n        function mostrarTags() {\r\n            tagsDiv.textContent = '';\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag');\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag;\r\n                tagsDiv.appendChild(etiqueta);\r\n            });\r\n\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function eliminarTag(e) {\r\n            e.target.remove();\r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function actualizarInputHidden() {\r\n            tagsInputHidden.value = tags.join(', ');\r\n        }\r\n    }\r\n})();\r\n\r\nfunction abrirModal(idProducto, cantidadFlores, stock) {\r\n    document.getElementById(\"modal-inventario\").style.display = \"flex\";\r\n    document.getElementById(\"id_producto_modal\").value = idProducto;\r\n    document.getElementById(\"cantidad_flores\").value = \"\";\r\n    document.getElementById(\"stock\").value = \"\";\r\n}\r\n\r\nfunction cerrarModal() {\r\n    document.getElementById(\"modal-inventario\").style.display = \"none\";\r\n}\r\n\r\nwindow.onclick = function(event) {\r\n    if (event.target == document.getElementById(\"modal-inventario\")) {\r\n        cerrarModal();\r\n    }\r\n}\r\n\r\n","document.addEventListener('DOMContentLoaded', function() {\r\n    const inputBusqueda = document.getElementById('inputBusqueda');\r\n    const filas = document.querySelectorAll('.table__tbody .table__tr');\r\n\r\n    inputBusqueda.addEventListener('input', function() {\r\n        const filtro = inputBusqueda.value.toLowerCase();\r\n\r\n        filas.forEach(fila => {\r\n            const textoFila = fila.textContent.toLowerCase();\r\n            if (textoFila.includes(filtro)) {\r\n                fila.style.display = '';  // Muestra la fila\r\n            } else {\r\n                fila.style.display = 'none';  // Oculta la fila\r\n            }\r\n        });\r\n    });\r\n});\r\n","document.addEventListener('DOMContentLoaded', function() {\r\n    var calendarEl1 = document.getElementById('calendar1');\r\n    var modal = document.getElementById('pedidoModal');\r\n    var closeBtn = document.querySelector('.close-pedido');\r\n    var inputBusqueda = document.getElementById('inputBusqueda');\r\n    var calendar1;\r\n\r\n    modal.style.display = 'none';\r\n\r\n    if (calendarEl1) {\r\n        calendar1 = new FullCalendar.Calendar(calendarEl1, {\r\n            initialView: 'dayGridMonth',\r\n            locale: 'es',\r\n            events: '/admin/pedidos/obtener_pedidos',\r\n            eventClick: function(info) {\r\n                document.getElementById('modalNombreCliente').innerText = info.event.extendedProps.cliente || 'No especificado';\r\n                document.getElementById('modalProducto').innerText = info.event.title || 'No especificado';\r\n                document.getElementById('modalFechaEntrega').innerText = info.event.start ? info.event.start.toISOString().split('T')[0] : 'No especificada';\r\n                document.getElementById('modalDireccion').innerText = info.event.extendedProps.direccion || 'No especificada';\r\n                document.getElementById('modalContacto').innerText = info.event.extendedProps.contacto || 'No especificado';\r\n                document.getElementById('pedidoId').value = info.event.id;\r\n                document.getElementById('modalEstado').value = info.event.extendedProps.estado || 'Pendiente';\r\n    \r\n                // Comprobamos si es un PedidoUsuario\r\n                if (info.event.extendedProps.tipo === 'pedidoUsuario') {\r\n                    // Ocultar el título y el formulario de actualización de estado\r\n                    document.querySelector('#actualizarEstadoForm').style.display = 'none';\r\n                    document.querySelector('#actualizarEstadoTitulo').style.display = 'none'; // Asegúrate de que el título tenga este ID\r\n                } else {\r\n                    // Mostrar el título y el formulario de actualización de estado\r\n                    document.querySelector('#actualizarEstadoForm').style.display = 'block';\r\n                    document.querySelector('#actualizarEstadoTitulo').style.display = 'block'; // Mostrar el título\r\n                }\r\n    \r\n                modal.style.display = 'flex';\r\n            },\r\n            eventClassNames: function(arg) {\r\n                var tipo = arg.event.extendedProps.tipo; // Obtener el tipo de pedido\r\n                if (tipo === 'pedidoUsuario') {\r\n                    return ['pedido-usuario']; // Clase para PedidoUsuario\r\n                }\r\n                var estado = arg.event.extendedProps.estado;\r\n                return estado === 'Pendiente' ? ['pendiente'] : estado === 'Pagado' ? ['pagado'] : ['terminado'];\r\n            }            \r\n        });\r\n\r\n        calendar1.render();\r\n    }\r\n\r\n    // Filtrar eventos del calendario\r\n    inputBusqueda.addEventListener('input', function() {\r\n        var searchTerm = this.value.toLowerCase();\r\n\r\n        calendar1.getEvents().forEach(function(event) {\r\n            var title = event.title.toLowerCase();\r\n            var cliente = event.extendedProps.cliente ? event.extendedProps.cliente.toLowerCase() : '';\r\n\r\n            // Mostrar u ocultar eventos según el término de búsqueda\r\n            if (title.includes(searchTerm) || cliente.includes(searchTerm)) {\r\n                event.setProp('display', 'auto'); // Mostrar el evento\r\n            } else {\r\n                event.setProp('display', 'none'); // Ocultar el evento\r\n            }\r\n        });\r\n    });\r\n\r\n    if (closeBtn) {\r\n        closeBtn.onclick = function() {\r\n            modal.style.display = 'none';\r\n        };\r\n    }\r\n\r\n    window.onclick = function(event) {\r\n        if (event.target === modal) {\r\n            modal.style.display = 'none';\r\n        }\r\n    };\r\n\r\n    document.getElementById('actualizarEstadoForm').addEventListener('submit', function(event) {\r\n        event.preventDefault();\r\n\r\n        var formData = new FormData(this);\r\n        fetch(this.action, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                calendar1.refetchEvents(); // Refrescar el calendario\r\n                modal.style.display = 'none';\r\n            } else {\r\n                alert('Hubo un problema al actualizar el estado');\r\n            }\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n    });\r\n});\r\n","document.addEventListener('DOMContentLoaded', function() {\r\n    const productosContainer = document.querySelector('.ventas-productos');\r\n    const productosSeleccionadosContainer = document.querySelector('.ventas-productos-seleccionados');\r\n    const totalDisplay = document.getElementById('totalDisplay');\r\n    const buscador = document.getElementById('buscador');\r\n    let totalVenta = 0;\r\n    const productosEnVenta = {};\r\n\r\n    // Almacena todos los productos en un array\r\n    const productos = Array.from(productosContainer.children).map(producto => {\r\n        return {\r\n            id: producto.getAttribute('data-id'),\r\n            precio: parseFloat(producto.getAttribute('data-precio')),\r\n            categoria: producto.getAttribute('data-categoria'),\r\n            elemento: producto // Guarda la referencia al elemento del DOM\r\n        };\r\n    });\r\n\r\n    // Función para mostrar productos filtrados\r\n    function mostrarProductosFiltrados(productosFiltrados) {\r\n        productosContainer.innerHTML = ''; // Limpiar los productos existentes\r\n\r\n        if (productosFiltrados.length === 0) {\r\n            productosContainer.innerHTML = '<div>No se encontraron productos.</div>';\r\n            return;\r\n        }\r\n\r\n        // Agregar productos filtrados al contenedor\r\n        productosFiltrados.forEach(producto => {\r\n            productosContainer.appendChild(producto.elemento);\r\n        });\r\n    }\r\n\r\n    // Función para mostrar todos los productos\r\n    function mostrarTodosLosProductos() {\r\n        productosContainer.innerHTML = '';\r\n        productos.forEach(producto => productosContainer.appendChild(producto.elemento));\r\n    }\r\n\r\n    // Añadir evento para el campo de búsqueda\r\n    buscador.addEventListener('input', function() {\r\n        const textoBusqueda = buscador.value.toLowerCase();\r\n        const productosFiltrados = productos.filter(producto => {\r\n            const nombreProducto = producto.elemento.querySelector('.producto-imagen').alt.toLowerCase();\r\n            return nombreProducto.includes(textoBusqueda);\r\n        });\r\n\r\n        mostrarProductosFiltrados(productosFiltrados);\r\n    });\r\n\r\n    // Función para formatear el precio\r\n    function formatoMoneda(valor) {\r\n        return `$${valor.toFixed(2)}`;\r\n    }\r\n\r\n    // Función para actualizar el total de la venta\r\n    function actualizarTotal() {\r\n        totalVenta = Object.values(productosEnVenta).reduce((total, producto) => {\r\n            return total + producto.precio * producto.cantidad;\r\n        }, 0);\r\n        totalDisplay.textContent = formatoMoneda(totalVenta);\r\n    }\r\n\r\n    // Función para actualizar la lista de productos seleccionados\r\n    function actualizarListaProductos() {\r\n        productosSeleccionadosContainer.innerHTML = ''; // Limpia la lista antes de actualizar\r\n    \r\n        Object.entries(productosEnVenta).forEach(([id, producto]) => {\r\n            const subtotal = producto.precio * producto.cantidad;\r\n            const productoRow = document.createElement('div');\r\n            productoRow.classList.add('ventas-producto-row');\r\n            \r\n            // Crea los span con las clases correspondientes\r\n            const spanNombre = document.createElement('span');\r\n            spanNombre.classList.add('producto-nombre');\r\n            spanNombre.textContent = producto.nombre;\r\n    \r\n            const spanCantidad = document.createElement('span');\r\n            spanCantidad.classList.add('producto-cantidad');\r\n            spanCantidad.textContent = producto.cantidad;\r\n    \r\n            const spanPrecio = document.createElement('span');\r\n            spanPrecio.classList.add('producto-precio');\r\n            spanPrecio.textContent = formatoMoneda(producto.precio);\r\n    \r\n            const spanSubtotal = document.createElement('span');\r\n            spanSubtotal.classList.add('producto-subtotal');\r\n            spanSubtotal.textContent = formatoMoneda(subtotal);\r\n    \r\n            // Agrega los spans al contenedor\r\n            productoRow.appendChild(spanNombre);\r\n            productoRow.appendChild(spanCantidad);\r\n            productoRow.appendChild(spanPrecio);\r\n            productoRow.appendChild(spanSubtotal);\r\n    \r\n            // Crea el botón de eliminar\r\n            const botonEliminar = document.createElement('button');\r\n            botonEliminar.classList.add('boton-eliminar');\r\n            botonEliminar.setAttribute('data-id', id);\r\n            botonEliminar.textContent = 'Eliminar';\r\n            productoRow.appendChild(botonEliminar);\r\n    \r\n            // Agrega la fila al contenedor principal\r\n            productosSeleccionadosContainer.appendChild(productoRow);\r\n        });\r\n    \r\n        // Agrega eventos a los botones de eliminar\r\n        document.querySelectorAll('.boton-eliminar').forEach(boton => {\r\n            boton.addEventListener('click', function() {\r\n                const productoId = this.getAttribute('data-id');\r\n                eliminarProductoSeleccionado(productoId);\r\n            });\r\n        });\r\n    }    \r\n\r\n    function eliminarProductoSeleccionado(productoId) {\r\n        delete productosEnVenta[productoId]; // Eliminar el producto del objeto\r\n        actualizarListaProductos(); // Actualizar la lista visual de productos\r\n        actualizarTotal(); // Actualizar el total de la venta\r\n    }\r\n\r\n    // Evento al hacer clic en cada producto\r\n    productosContainer.addEventListener('click', function(event) {\r\n        const card = event.target.closest('.ventas-producto');\r\n        if (!card) return;\r\n\r\n        const productoId = card.getAttribute('data-id');\r\n        const nombreProducto = card.querySelector('.producto-imagen').alt;\r\n        const precioProducto = parseFloat(card.getAttribute('data-precio'));\r\n\r\n        if (productosEnVenta[productoId]) {\r\n            productosEnVenta[productoId].cantidad += 1;\r\n        } else {\r\n            productosEnVenta[productoId] = {\r\n                nombre: nombreProducto,\r\n                precio: precioProducto,\r\n                cantidad: 1\r\n            };\r\n        }\r\n\r\n        actualizarListaProductos();\r\n        actualizarTotal();\r\n    });\r\n\r\n    // Limpiar lista de productos\r\n    document.querySelector('.boton-limpiar').addEventListener('click', function() {\r\n        Object.keys(productosEnVenta).forEach(key => delete productosEnVenta[key]);\r\n        productosSeleccionadosContainer.innerHTML = '';\r\n        totalVenta = 0;\r\n        totalDisplay.textContent = formatoMoneda(totalVenta);\r\n    });\r\n\r\n    // Evento al hacer clic en \"Vender\"\r\n    document.querySelector('.boton-vender').addEventListener('click', function() {\r\n        const clienteId = document.getElementById('cliente').value;\r\n        if (!clienteId || Object.keys(productosEnVenta).length === 0) {\r\n            Swal.fire({\r\n                icon: 'warning',\r\n                title: 'Advertencia',\r\n                text: 'Selecciona un cliente y productos para vender.',\r\n                confirmButtonText: 'Aceptar',\r\n                customClass: {\r\n                    popup: 'mi-alerta-personalizada'\r\n                }\r\n            });\r\n            return;\r\n        }\r\n\r\n        const ventaData = {\r\n            clienteID: clienteId,\r\n            productos: productosEnVenta,\r\n            total: totalVenta\r\n        };\r\n\r\n        fetch('/admin/ventas/vender', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(ventaData)\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: '¡Éxito!',\r\n                text: data.mensaje,\r\n                confirmButtonText: 'Aceptar',\r\n                customClass: {\r\n                    popup: 'mi-alerta-personalizada'\r\n                }\r\n            });\r\n\r\n            Object.keys(productosEnVenta).forEach(key => delete productosEnVenta[key]);\r\n            actualizarListaProductos();\r\n            actualizarTotal();\r\n        })\r\n        .catch(error => {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: 'Error: ' + error.message,\r\n                confirmButtonText: 'Aceptar',\r\n                customClass: {\r\n                    popup: 'mi-alerta-personalizada'\r\n                }\r\n            });\r\n        });\r\n    });\r\n\r\n    // Evento para los botones de categoría\r\n    const categoriaButtons = document.querySelectorAll('.ventas-categoria');\r\n    categoriaButtons.forEach(button => {\r\n        button.addEventListener('click', function() {\r\n            const categoriaId = this.getAttribute('data-id');\r\n            if (categoriaId === 'todos') {\r\n                mostrarTodosLosProductos();\r\n            } else {\r\n                mostrarProductosPorCategoria(categoriaId);\r\n            }\r\n        });\r\n    });\r\n\r\n    // Función para mostrar productos filtrados por categoría\r\n    function mostrarProductosPorCategoria(categoriaId) {\r\n        productosContainer.innerHTML = '';\r\n\r\n        const productosFiltrados = productos.filter(producto => producto.categoria == categoriaId);\r\n\r\n        if (productosFiltrados.length === 0) {\r\n            productosContainer.innerHTML = '<div>No hay productos en esta categoría.</div>';\r\n            return;\r\n        }\r\n\r\n        productosFiltrados.forEach(producto => {\r\n            productosContainer.appendChild(producto.elemento);\r\n        });\r\n    }\r\n});\r\n"]}